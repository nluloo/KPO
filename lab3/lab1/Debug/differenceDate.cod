; Listing generated by Microsoft (R) Optimizing Compiler Version 19.38.33134.0 

	TITLE	D:\labs\kpo\1sem\lab3\lab1\Debug\differenceDate.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__5CD2C691_concurrencysal@h DB 01H
__AC907F0D_sal@h DB 01H
__25E6C1AF_vadefs@h DB 01H
__1BAD82EE_vcruntime@h DB 01H
__FF70C7F3_xkeycheck@h DB 01H
__83726EB0_yvals_core@h DB 01H
__E39D81F6_limits@h DB 01H
__6C88BF80_climits DB 01H
__1B0272D9_corecrt@h DB 01H
__1FCB40CB_vcruntime_new@h DB 01H
__D06C1787_vcruntime_new_debug@h DB 01H
__935DC21B_crtdbg@h DB 01H
__5FE44752_crtdefs@h DB 01H
__99FA6215_use_ansi@h DB 01H
__5E272BCD_yvals@h DB 01H
__BB16330F_corecrt_math@h DB 01H
__3BF2A406_math@h DB 01H
__45DED006_corecrt_malloc@h DB 01H
__13F5961F_stddef@h DB 01H
__FD6DBD68_corecrt_search@h DB 01H
__E2E33A61_corecrt_wstdlib@h DB 01H
__6E5ACABA_stdlib@h DB 01H
__E8679D72_cstdlib DB 01H
__62F4505C_xtr1common DB 01H
__63E2EDD2_intrin0@inl@h DB 01H
__46C9FE59_intrin0@h DB 01H
__CE2A71BA_cmath DB 01H
__44420885_corecrt_stdio_config@h DB 01H
__AB601D8D_corecrt_wstdio@h DB 01H
__C1EC35D3_stdio@h DB 01H
__4B5D1055_cstdio DB 01H
__61CC25A1_errno@h DB 01H
__DDA1E9D6_vcruntime_string@h DB 01H
__E4C945B4_corecrt_memcpy_s@h DB 01H
__8EAFF484_corecrt_memory@h DB 01H
__6490AEC5_corecrt_wstring@h DB 01H
__E8295E1E_string@h DB 01H
__A4F53592_cstring DB 01H
__EF1F6BBA_corecrt_wconio@h DB 01H
__74484FB3_corecrt_wctype@h DB 01H
__3D1D430C_corecrt_wdirect@h DB 01H
__8ECB7138_corecrt_share@h DB 01H
__DB7FEBA6_corecrt_wio@h DB 01H
__9A9F0068_corecrt_wprocess@h DB 01H
__369A9BC3_corecrt_wtime@h DB 01H
__CE789B9D_types@h DB 01H
__9901C817_stat@h DB 01H
__3FCAD62E_wchar@h DB 01H
__D1D6C606_cwchar DB 01H
__92164330_iosfwd DB 01H
__4DAC47DF_cstddef DB 01H
__4614B0A2_initializer_list DB 01H
__5DEBAFC9_stdint@h DB 01H
__55397C0F_cstdint DB 01H
__B1D90138_type_traits DB 01H
__DF6A18F9_utility DB 01H
__8FD84684___msvc_iter_core@hpp DB 01H
__3133D734_xutility DB 01H
__209F6074_iterator DB 01H
__F7972D0B_share@h DB 01H
__471AC4AE___msvc_system_error_abi@hpp DB 01H
__D67C64AE_cerrno DB 01H
__FA77ED4C_malloc@h DB 01H
__89766DA4_corecrt_terminate@h DB 01H
__0BD5B7AD_eh@h DB 01H
__D88212D5_vcruntime_exception@h DB 01H
__97BB29C4_exception DB 01H
__D8A9F822___msvc_sanitizer_annotate_container@hpp DB 01H
__B9985323_float@h DB 01H
__3819DBD2_cfloat DB 01H
__5EFF96B6_limits DB 01H
__A524F45B_new DB 01H
__9DB7A512_xatomic@h DB 01H
__B5FF7B3A_xmemory DB 01H
__C12CFDA6_xstring DB 01H
__1EF51399_stdexcept DB 01H
__C0EAB0E0_xcall_once@h DB 01H
__F6B23EC2_xerrc@h DB 01H
__0A9237D2_time@h DB 01H
__0899EDB2_ctime DB 01H
__87F73475_xtimec@h DB 01H
__F8B455A6_xthreads@h DB 01H
__35CACA74_atomic DB 01H
__7FB7A2C0_system_error DB 01H
__9B36A01B_vcruntime_typeinfo@h DB 01H
__41EC242D_typeinfo DB 01H
__E2519A38_memory DB 01H
__CE14CD37_xfacet DB 01H
__AC3744CB___msvc_xlocinfo_types@hpp DB 01H
__1EC467ED_ctype@h DB 01H
__4496F7F2_cctype DB 01H
__791C33B7_locale@h DB 01H
__7BCB41A3_clocale DB 01H
__5E65C7E5_xlocinfo DB 01H
__1E128997_xlocale DB 01H
__6780B0F6_xiosbase DB 01H
__1C55AB25_streambuf DB 01H
__8095EF80_xlocnum DB 01H
__5DE9CE4D_ios DB 01H
__0D025353_ostream DB 01H
__6ED26669_istream DB 01H
__534AAD2B_iostream DB 01H
__F5D6DE08_stdafx@h DB 01H
__BA11FD84_leapYear@h DB 01H
__E210E423_days@h DB 01H
__862AA99D_differenceDate@h DB 01H
__188A8E1A_differenceDate@cpp DB 01H
msvcjmc	ENDS
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	?difference_date@@YAHHH@Z			; difference_date
PUBLIC	__JustMyCode_Default
EXTRN	_abs:PROC
EXTRN	?leapYear@@YA_NH@Z:PROC				; leapYear
EXTRN	?days@@YAHHHH_N@Z:PROC				; days
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\labs\kpo\1sem\lab3\lab1\differenceDate.cpp
;	COMDAT ?difference_date@@YAHHH@Z
_TEXT	SEGMENT
_leapCount$ = -116					; size = 4
_numberSecond$ = -104					; size = 4
_numberFirst$ = -92					; size = 4
_diffYearInDay$ = -80					; size = 4
_secondDateYear$ = -68					; size = 4
_secondDateMonth$ = -56					; size = 4
_secondDateDay$ = -44					; size = 4
_firstDateYear$ = -32					; size = 4
_firstDateMonth$ = -20					; size = 4
_firstDateDay$ = -8					; size = 4
_firstDate$ = 8						; size = 4
_secondDate$ = 12					; size = 4
?difference_date@@YAHHH@Z PROC				; difference_date, COMDAT

; 4    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 38 01 00
	00		 sub	 esp, 312		; 00000138H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d 7d 88	 lea	 edi, DWORD PTR [ebp-120]
  0000f	b9 1e 00 00 00	 mov	 ecx, 30			; 0000001eH
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	f3 ab		 rep stosd
  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET __188A8E1A_differenceDate@cpp
  00020	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 5    : 
; 6    :     int firstDateDay = (firstDate / 10000000) * 10 + (firstDate / 1000000) % 10;

  00025	8b 45 08	 mov	 eax, DWORD PTR _firstDate$[ebp]
  00028	99		 cdq
  00029	b9 80 96 98 00	 mov	 ecx, 10000000		; 00989680H
  0002e	f7 f9		 idiv	 ecx
  00030	6b c8 0a	 imul	 ecx, eax, 10
  00033	8b 45 08	 mov	 eax, DWORD PTR _firstDate$[ebp]
  00036	99		 cdq
  00037	be 40 42 0f 00	 mov	 esi, 1000000		; 000f4240H
  0003c	f7 fe		 idiv	 esi
  0003e	99		 cdq
  0003f	be 0a 00 00 00	 mov	 esi, 10			; 0000000aH
  00044	f7 fe		 idiv	 esi
  00046	03 ca		 add	 ecx, edx
  00048	89 4d f8	 mov	 DWORD PTR _firstDateDay$[ebp], ecx

; 7    :     int firstDateMonth = (firstDate / 100000) % 10 * 10 + (firstDate / 10000) % 10;

  0004b	8b 45 08	 mov	 eax, DWORD PTR _firstDate$[ebp]
  0004e	99		 cdq
  0004f	b9 a0 86 01 00	 mov	 ecx, 100000		; 000186a0H
  00054	f7 f9		 idiv	 ecx
  00056	99		 cdq
  00057	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  0005c	f7 f9		 idiv	 ecx
  0005e	6b ca 0a	 imul	 ecx, edx, 10
  00061	8b 45 08	 mov	 eax, DWORD PTR _firstDate$[ebp]
  00064	99		 cdq
  00065	be 10 27 00 00	 mov	 esi, 10000		; 00002710H
  0006a	f7 fe		 idiv	 esi
  0006c	99		 cdq
  0006d	be 0a 00 00 00	 mov	 esi, 10			; 0000000aH
  00072	f7 fe		 idiv	 esi
  00074	03 ca		 add	 ecx, edx
  00076	89 4d ec	 mov	 DWORD PTR _firstDateMonth$[ebp], ecx

; 8    :     int firstDateYear = firstDate % 10000;

  00079	8b 45 08	 mov	 eax, DWORD PTR _firstDate$[ebp]
  0007c	99		 cdq
  0007d	b9 10 27 00 00	 mov	 ecx, 10000		; 00002710H
  00082	f7 f9		 idiv	 ecx
  00084	89 55 e0	 mov	 DWORD PTR _firstDateYear$[ebp], edx

; 9    :     int secondDateDay = (secondDate / 10000000) * 10 + (secondDate / 1000000) % 10;

  00087	8b 45 0c	 mov	 eax, DWORD PTR _secondDate$[ebp]
  0008a	99		 cdq
  0008b	b9 80 96 98 00	 mov	 ecx, 10000000		; 00989680H
  00090	f7 f9		 idiv	 ecx
  00092	6b c8 0a	 imul	 ecx, eax, 10
  00095	8b 45 0c	 mov	 eax, DWORD PTR _secondDate$[ebp]
  00098	99		 cdq
  00099	be 40 42 0f 00	 mov	 esi, 1000000		; 000f4240H
  0009e	f7 fe		 idiv	 esi
  000a0	99		 cdq
  000a1	be 0a 00 00 00	 mov	 esi, 10			; 0000000aH
  000a6	f7 fe		 idiv	 esi
  000a8	03 ca		 add	 ecx, edx
  000aa	89 4d d4	 mov	 DWORD PTR _secondDateDay$[ebp], ecx

; 10   :     int secondDateMonth = (secondDate / 100000) % 10 * 10 + (secondDate / 10000) % 10;

  000ad	8b 45 0c	 mov	 eax, DWORD PTR _secondDate$[ebp]
  000b0	99		 cdq
  000b1	b9 a0 86 01 00	 mov	 ecx, 100000		; 000186a0H
  000b6	f7 f9		 idiv	 ecx
  000b8	99		 cdq
  000b9	b9 0a 00 00 00	 mov	 ecx, 10			; 0000000aH
  000be	f7 f9		 idiv	 ecx
  000c0	6b ca 0a	 imul	 ecx, edx, 10
  000c3	8b 45 0c	 mov	 eax, DWORD PTR _secondDate$[ebp]
  000c6	99		 cdq
  000c7	be 10 27 00 00	 mov	 esi, 10000		; 00002710H
  000cc	f7 fe		 idiv	 esi
  000ce	99		 cdq
  000cf	be 0a 00 00 00	 mov	 esi, 10			; 0000000aH
  000d4	f7 fe		 idiv	 esi
  000d6	03 ca		 add	 ecx, edx
  000d8	89 4d c8	 mov	 DWORD PTR _secondDateMonth$[ebp], ecx

; 11   :     int secondDateYear = secondDate % 10000;

  000db	8b 45 0c	 mov	 eax, DWORD PTR _secondDate$[ebp]
  000de	99		 cdq
  000df	b9 10 27 00 00	 mov	 ecx, 10000		; 00002710H
  000e4	f7 f9		 idiv	 ecx
  000e6	89 55 bc	 mov	 DWORD PTR _secondDateYear$[ebp], edx

; 12   :     
; 13   :     int diffYearInDay = abs(secondDateYear - firstDateYear) * 365;

  000e9	8b 45 bc	 mov	 eax, DWORD PTR _secondDateYear$[ebp]
  000ec	2b 45 e0	 sub	 eax, DWORD PTR _firstDateYear$[ebp]
  000ef	50		 push	 eax
  000f0	e8 00 00 00 00	 call	 _abs
  000f5	83 c4 04	 add	 esp, 4
  000f8	69 c8 6d 01 00
	00		 imul	 ecx, eax, 365
  000fe	89 4d b0	 mov	 DWORD PTR _diffYearInDay$[ebp], ecx

; 14   :     
; 15   :     int numberFirst = days(firstDateDay, firstDateMonth, firstDateYear, leapYear(firstDateYear));

  00101	8b 45 e0	 mov	 eax, DWORD PTR _firstDateYear$[ebp]
  00104	50		 push	 eax
  00105	e8 00 00 00 00	 call	 ?leapYear@@YA_NH@Z	; leapYear
  0010a	83 c4 04	 add	 esp, 4
  0010d	0f b6 c8	 movzx	 ecx, al
  00110	51		 push	 ecx
  00111	8b 55 e0	 mov	 edx, DWORD PTR _firstDateYear$[ebp]
  00114	52		 push	 edx
  00115	8b 45 ec	 mov	 eax, DWORD PTR _firstDateMonth$[ebp]
  00118	50		 push	 eax
  00119	8b 4d f8	 mov	 ecx, DWORD PTR _firstDateDay$[ebp]
  0011c	51		 push	 ecx
  0011d	e8 00 00 00 00	 call	 ?days@@YAHHHH_N@Z	; days
  00122	83 c4 10	 add	 esp, 16			; 00000010H
  00125	89 45 a4	 mov	 DWORD PTR _numberFirst$[ebp], eax

; 16   :     int numberSecond = days(secondDateDay, secondDateMonth, secondDateYear, leapYear(secondDateYear));

  00128	8b 45 bc	 mov	 eax, DWORD PTR _secondDateYear$[ebp]
  0012b	50		 push	 eax
  0012c	e8 00 00 00 00	 call	 ?leapYear@@YA_NH@Z	; leapYear
  00131	83 c4 04	 add	 esp, 4
  00134	0f b6 c8	 movzx	 ecx, al
  00137	51		 push	 ecx
  00138	8b 55 bc	 mov	 edx, DWORD PTR _secondDateYear$[ebp]
  0013b	52		 push	 edx
  0013c	8b 45 c8	 mov	 eax, DWORD PTR _secondDateMonth$[ebp]
  0013f	50		 push	 eax
  00140	8b 4d d4	 mov	 ecx, DWORD PTR _secondDateDay$[ebp]
  00143	51		 push	 ecx
  00144	e8 00 00 00 00	 call	 ?days@@YAHHHH_N@Z	; days
  00149	83 c4 10	 add	 esp, 16			; 00000010H
  0014c	89 45 98	 mov	 DWORD PTR _numberSecond$[ebp], eax

; 17   : 
; 18   :     int leapCount = 0;

  0014f	c7 45 8c 00 00
	00 00		 mov	 DWORD PTR _leapCount$[ebp], 0
$LN2@difference:

; 19   : 
; 20   :     while (secondDateYear != firstDateYear) {

  00156	8b 45 bc	 mov	 eax, DWORD PTR _secondDateYear$[ebp]
  00159	3b 45 e0	 cmp	 eax, DWORD PTR _firstDateYear$[ebp]
  0015c	74 27		 je	 SHORT $LN3@difference

; 21   :         if (leapYear(firstDateYear)) {

  0015e	8b 45 e0	 mov	 eax, DWORD PTR _firstDateYear$[ebp]
  00161	50		 push	 eax
  00162	e8 00 00 00 00	 call	 ?leapYear@@YA_NH@Z	; leapYear
  00167	83 c4 04	 add	 esp, 4
  0016a	0f b6 c8	 movzx	 ecx, al
  0016d	85 c9		 test	 ecx, ecx
  0016f	74 09		 je	 SHORT $LN4@difference

; 22   :             leapCount++;

  00171	8b 45 8c	 mov	 eax, DWORD PTR _leapCount$[ebp]
  00174	83 c0 01	 add	 eax, 1
  00177	89 45 8c	 mov	 DWORD PTR _leapCount$[ebp], eax
$LN4@difference:

; 23   :         }
; 24   :         firstDateYear++;

  0017a	8b 45 e0	 mov	 eax, DWORD PTR _firstDateYear$[ebp]
  0017d	83 c0 01	 add	 eax, 1
  00180	89 45 e0	 mov	 DWORD PTR _firstDateYear$[ebp], eax

; 25   :     }

  00183	eb d1		 jmp	 SHORT $LN2@difference
$LN3@difference:

; 26   : 
; 27   :     return abs(numberSecond - numberFirst) + diffYearInDay + leapCount;

  00185	8b 45 98	 mov	 eax, DWORD PTR _numberSecond$[ebp]
  00188	2b 45 a4	 sub	 eax, DWORD PTR _numberFirst$[ebp]
  0018b	50		 push	 eax
  0018c	e8 00 00 00 00	 call	 _abs
  00191	83 c4 04	 add	 esp, 4
  00194	03 45 b0	 add	 eax, DWORD PTR _diffYearInDay$[ebp]
  00197	03 45 8c	 add	 eax, DWORD PTR _leapCount$[ebp]

; 28   : }

  0019a	5f		 pop	 edi
  0019b	5e		 pop	 esi
  0019c	5b		 pop	 ebx
  0019d	81 c4 38 01 00
	00		 add	 esp, 312		; 00000138H
  001a3	3b ec		 cmp	 ebp, esp
  001a5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001aa	8b e5		 mov	 esp, ebp
  001ac	5d		 pop	 ebp
  001ad	c3		 ret	 0
?difference_date@@YAHHH@Z ENDP				; difference_date
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\labs\kpo\1sem\lab3\lab1\differenceDate.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b fd		 mov	 edi, ebp
  0000e	33 c9		 xor	 ecx, ecx
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __188A8E1A_differenceDate@cpp
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\labs\kpo\1sem\lab3\lab1\differenceDate.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b fd		 mov	 edi, ebp
  0000e	33 c9		 xor	 ecx, ecx
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __188A8E1A_differenceDate@cpp
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
