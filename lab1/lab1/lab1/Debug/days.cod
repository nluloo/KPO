; Listing generated by Microsoft (R) Optimizing Compiler Version 19.38.33134.0 

	TITLE	D:\labs\kpo\1sem\lab1\lab1\lab1\Debug\days.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__5CD2C691_concurrencysal@h DB 01H
__AC907F0D_sal@h DB 01H
__25E6C1AF_vadefs@h DB 01H
__1BAD82EE_vcruntime@h DB 01H
__FF70C7F3_xkeycheck@h DB 01H
__83726EB0_yvals_core@h DB 01H
__E39D81F6_limits@h DB 01H
__6C88BF80_climits DB 01H
__1B0272D9_corecrt@h DB 01H
__1FCB40CB_vcruntime_new@h DB 01H
__D06C1787_vcruntime_new_debug@h DB 01H
__935DC21B_crtdbg@h DB 01H
__5FE44752_crtdefs@h DB 01H
__99FA6215_use_ansi@h DB 01H
__5E272BCD_yvals@h DB 01H
__BB16330F_corecrt_math@h DB 01H
__3BF2A406_math@h DB 01H
__45DED006_corecrt_malloc@h DB 01H
__13F5961F_stddef@h DB 01H
__FD6DBD68_corecrt_search@h DB 01H
__E2E33A61_corecrt_wstdlib@h DB 01H
__6E5ACABA_stdlib@h DB 01H
__E8679D72_cstdlib DB 01H
__62F4505C_xtr1common DB 01H
__63E2EDD2_intrin0@inl@h DB 01H
__46C9FE59_intrin0@h DB 01H
__CE2A71BA_cmath DB 01H
__44420885_corecrt_stdio_config@h DB 01H
__AB601D8D_corecrt_wstdio@h DB 01H
__C1EC35D3_stdio@h DB 01H
__4B5D1055_cstdio DB 01H
__61CC25A1_errno@h DB 01H
__DDA1E9D6_vcruntime_string@h DB 01H
__E4C945B4_corecrt_memcpy_s@h DB 01H
__8EAFF484_corecrt_memory@h DB 01H
__6490AEC5_corecrt_wstring@h DB 01H
__E8295E1E_string@h DB 01H
__A4F53592_cstring DB 01H
__EF1F6BBA_corecrt_wconio@h DB 01H
__74484FB3_corecrt_wctype@h DB 01H
__3D1D430C_corecrt_wdirect@h DB 01H
__8ECB7138_corecrt_share@h DB 01H
__DB7FEBA6_corecrt_wio@h DB 01H
__9A9F0068_corecrt_wprocess@h DB 01H
__369A9BC3_corecrt_wtime@h DB 01H
__CE789B9D_types@h DB 01H
__9901C817_stat@h DB 01H
__3FCAD62E_wchar@h DB 01H
__D1D6C606_cwchar DB 01H
__92164330_iosfwd DB 01H
__4DAC47DF_cstddef DB 01H
__4614B0A2_initializer_list DB 01H
__5DEBAFC9_stdint@h DB 01H
__55397C0F_cstdint DB 01H
__B1D90138_type_traits DB 01H
__DF6A18F9_utility DB 01H
__8FD84684___msvc_iter_core@hpp DB 01H
__3133D734_xutility DB 01H
__209F6074_iterator DB 01H
__F7972D0B_share@h DB 01H
__471AC4AE___msvc_system_error_abi@hpp DB 01H
__D67C64AE_cerrno DB 01H
__FA77ED4C_malloc@h DB 01H
__89766DA4_corecrt_terminate@h DB 01H
__0BD5B7AD_eh@h DB 01H
__D88212D5_vcruntime_exception@h DB 01H
__97BB29C4_exception DB 01H
__D8A9F822___msvc_sanitizer_annotate_container@hpp DB 01H
__B9985323_float@h DB 01H
__3819DBD2_cfloat DB 01H
__5EFF96B6_limits DB 01H
__A524F45B_new DB 01H
__9DB7A512_xatomic@h DB 01H
__B5FF7B3A_xmemory DB 01H
__C12CFDA6_xstring DB 01H
__1EF51399_stdexcept DB 01H
__C0EAB0E0_xcall_once@h DB 01H
__F6B23EC2_xerrc@h DB 01H
__0A9237D2_time@h DB 01H
__0899EDB2_ctime DB 01H
__87F73475_xtimec@h DB 01H
__F8B455A6_xthreads@h DB 01H
__35CACA74_atomic DB 01H
__7FB7A2C0_system_error DB 01H
__9B36A01B_vcruntime_typeinfo@h DB 01H
__41EC242D_typeinfo DB 01H
__E2519A38_memory DB 01H
__CE14CD37_xfacet DB 01H
__AC3744CB___msvc_xlocinfo_types@hpp DB 01H
__1EC467ED_ctype@h DB 01H
__4496F7F2_cctype DB 01H
__791C33B7_locale@h DB 01H
__7BCB41A3_clocale DB 01H
__5E65C7E5_xlocinfo DB 01H
__1E128997_xlocale DB 01H
__6780B0F6_xiosbase DB 01H
__1C55AB25_streambuf DB 01H
__8095EF80_xlocnum DB 01H
__5DE9CE4D_ios DB 01H
__0D025353_ostream DB 01H
__6ED26669_istream DB 01H
__534AAD2B_iostream DB 01H
__34160581_stdafx@h DB 01H
__F5A1A482_days@h DB 01H
__AB618FB2_days@cpp DB 01H
msvcjmc	ENDS
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	?days@@YAHHHH_N@Z				; days
PUBLIC	__JustMyCode_Default
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\labs\kpo\1sem\lab1\lab1\lab1\days.cpp
;	COMDAT ?days@@YAHHHH_N@Z
_TEXT	SEGMENT
tv80 = -196						; size = 4
tv66 = -196						; size = 4
_day$ = 8						; size = 4
_month$ = 12						; size = 4
_dr$ = 16						; size = 4
_result$ = 20						; size = 1
?days@@YAHHHH_N@Z PROC					; days, COMDAT

; 5    : int days(int day, int month, int dr, bool result) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d 7d fc	 lea	 edi, DWORD PTR [ebp-4]
  0000f	b9 01 00 00 00	 mov	 ecx, 1
  00014	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00019	f3 ab		 rep stosd
  0001b	b9 00 00 00 00	 mov	 ecx, OFFSET __AB618FB2_days@cpp
  00020	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 6    : 
; 7    : 	if (result == true)

  00025	0f b6 45 14	 movzx	 eax, BYTE PTR _result$[ebp]
  00029	83 f8 01	 cmp	 eax, 1
  0002c	0f 85 c7 00 00
	00		 jne	 $LN6@days

; 8    : 	{
; 9    : 		switch (month) {

  00032	8b 45 0c	 mov	 eax, DWORD PTR _month$[ebp]
  00035	89 85 3c ff ff
	ff		 mov	 DWORD PTR tv66[ebp], eax
  0003b	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR tv66[ebp]
  00041	83 e9 01	 sub	 ecx, 1
  00044	89 8d 3c ff ff
	ff		 mov	 DWORD PTR tv66[ebp], ecx
  0004a	83 bd 3c ff ff
	ff 0b		 cmp	 DWORD PTR tv66[ebp], 11	; 0000000bH
  00051	0f 87 9d 00 00
	00		 ja	 $LN2@days
  00057	8b 95 3c ff ff
	ff		 mov	 edx, DWORD PTR tv66[ebp]
  0005d	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN33@days[edx*4]
$LN8@days:

; 10   : 		case 1:
; 11   : 			dr = day;

  00064	8b 45 08	 mov	 eax, DWORD PTR _day$[ebp]
  00067	89 45 10	 mov	 DWORD PTR _dr$[ebp], eax

; 12   : 			break;

  0006a	e9 85 00 00 00	 jmp	 $LN2@days
$LN9@days:

; 13   : 		case 2:
; 14   : 			dr = 31 + day;

  0006f	8b 45 08	 mov	 eax, DWORD PTR _day$[ebp]
  00072	83 c0 1f	 add	 eax, 31			; 0000001fH
  00075	89 45 10	 mov	 DWORD PTR _dr$[ebp], eax

; 15   : 			break;

  00078	eb 7a		 jmp	 SHORT $LN2@days
$LN10@days:

; 16   : 		case 3:
; 17   : 			dr = 60 + day;

  0007a	8b 45 08	 mov	 eax, DWORD PTR _day$[ebp]
  0007d	83 c0 3c	 add	 eax, 60			; 0000003cH
  00080	89 45 10	 mov	 DWORD PTR _dr$[ebp], eax

; 18   : 			break;

  00083	eb 6f		 jmp	 SHORT $LN2@days
$LN11@days:

; 19   : 		case 4:
; 20   : 			dr = 91 + day;

  00085	8b 45 08	 mov	 eax, DWORD PTR _day$[ebp]
  00088	83 c0 5b	 add	 eax, 91			; 0000005bH
  0008b	89 45 10	 mov	 DWORD PTR _dr$[ebp], eax

; 21   : 			break;

  0008e	eb 64		 jmp	 SHORT $LN2@days
$LN12@days:

; 22   : 		case 5:
; 23   : 			dr = 121 + day;

  00090	8b 45 08	 mov	 eax, DWORD PTR _day$[ebp]
  00093	83 c0 79	 add	 eax, 121		; 00000079H
  00096	89 45 10	 mov	 DWORD PTR _dr$[ebp], eax

; 24   : 			break;

  00099	eb 59		 jmp	 SHORT $LN2@days
$LN13@days:

; 25   : 		case 6:
; 26   : 			dr = 152 + day;

  0009b	8b 45 08	 mov	 eax, DWORD PTR _day$[ebp]
  0009e	05 98 00 00 00	 add	 eax, 152		; 00000098H
  000a3	89 45 10	 mov	 DWORD PTR _dr$[ebp], eax

; 27   : 			break;

  000a6	eb 4c		 jmp	 SHORT $LN2@days
$LN14@days:

; 28   : 		case 7:
; 29   : 			dr = 182 + day;

  000a8	8b 45 08	 mov	 eax, DWORD PTR _day$[ebp]
  000ab	05 b6 00 00 00	 add	 eax, 182		; 000000b6H
  000b0	89 45 10	 mov	 DWORD PTR _dr$[ebp], eax

; 30   : 			break;

  000b3	eb 3f		 jmp	 SHORT $LN2@days
$LN15@days:

; 31   : 		case 8:
; 32   : 			dr = 213 + day;

  000b5	8b 45 08	 mov	 eax, DWORD PTR _day$[ebp]
  000b8	05 d5 00 00 00	 add	 eax, 213		; 000000d5H
  000bd	89 45 10	 mov	 DWORD PTR _dr$[ebp], eax

; 33   : 			break;

  000c0	eb 32		 jmp	 SHORT $LN2@days
$LN16@days:

; 34   : 		case 9:
; 35   : 			dr = 244 + day;

  000c2	8b 45 08	 mov	 eax, DWORD PTR _day$[ebp]
  000c5	05 f4 00 00 00	 add	 eax, 244		; 000000f4H
  000ca	89 45 10	 mov	 DWORD PTR _dr$[ebp], eax

; 36   : 			break;

  000cd	eb 25		 jmp	 SHORT $LN2@days
$LN17@days:

; 37   : 		case 10:
; 38   : 			dr = 274 + day;

  000cf	8b 45 08	 mov	 eax, DWORD PTR _day$[ebp]
  000d2	05 12 01 00 00	 add	 eax, 274		; 00000112H
  000d7	89 45 10	 mov	 DWORD PTR _dr$[ebp], eax

; 39   : 			break;

  000da	eb 18		 jmp	 SHORT $LN2@days
$LN18@days:

; 40   : 		case 11:
; 41   : 			dr = 305 + day;

  000dc	8b 45 08	 mov	 eax, DWORD PTR _day$[ebp]
  000df	05 31 01 00 00	 add	 eax, 305		; 00000131H
  000e4	89 45 10	 mov	 DWORD PTR _dr$[ebp], eax

; 42   : 			break;

  000e7	eb 0b		 jmp	 SHORT $LN2@days
$LN19@days:

; 43   : 		case 12:
; 44   : 			dr = 335 + day;

  000e9	8b 45 08	 mov	 eax, DWORD PTR _day$[ebp]
  000ec	05 4f 01 00 00	 add	 eax, 335		; 0000014fH
  000f1	89 45 10	 mov	 DWORD PTR _dr$[ebp], eax
$LN2@days:

; 45   : 			break;
; 46   : 		};
; 47   : 	}

  000f4	e9 c2 00 00 00	 jmp	 $LN7@days
$LN6@days:

; 48   : 	else
; 49   : 	{
; 50   : 		switch (month) {

  000f9	8b 45 0c	 mov	 eax, DWORD PTR _month$[ebp]
  000fc	89 85 3c ff ff
	ff		 mov	 DWORD PTR tv80[ebp], eax
  00102	8b 8d 3c ff ff
	ff		 mov	 ecx, DWORD PTR tv80[ebp]
  00108	83 e9 01	 sub	 ecx, 1
  0010b	89 8d 3c ff ff
	ff		 mov	 DWORD PTR tv80[ebp], ecx
  00111	83 bd 3c ff ff
	ff 0b		 cmp	 DWORD PTR tv80[ebp], 11	; 0000000bH
  00118	0f 87 9d 00 00
	00		 ja	 $LN7@days
  0011e	8b 95 3c ff ff
	ff		 mov	 edx, DWORD PTR tv80[ebp]
  00124	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN34@days[edx*4]
$LN20@days:

; 51   : 		case 1:
; 52   : 			dr = day;

  0012b	8b 45 08	 mov	 eax, DWORD PTR _day$[ebp]
  0012e	89 45 10	 mov	 DWORD PTR _dr$[ebp], eax

; 53   : 			break;

  00131	e9 85 00 00 00	 jmp	 $LN7@days
$LN21@days:

; 54   : 		case 2:
; 55   : 			dr = 31 + day;

  00136	8b 45 08	 mov	 eax, DWORD PTR _day$[ebp]
  00139	83 c0 1f	 add	 eax, 31			; 0000001fH
  0013c	89 45 10	 mov	 DWORD PTR _dr$[ebp], eax

; 56   : 			break;

  0013f	eb 7a		 jmp	 SHORT $LN7@days
$LN22@days:

; 57   : 		case 3:
; 58   : 			dr = 59 + day;

  00141	8b 45 08	 mov	 eax, DWORD PTR _day$[ebp]
  00144	83 c0 3b	 add	 eax, 59			; 0000003bH
  00147	89 45 10	 mov	 DWORD PTR _dr$[ebp], eax

; 59   : 			break;

  0014a	eb 6f		 jmp	 SHORT $LN7@days
$LN23@days:

; 60   : 		case 4:
; 61   : 			dr = 90 + day;

  0014c	8b 45 08	 mov	 eax, DWORD PTR _day$[ebp]
  0014f	83 c0 5a	 add	 eax, 90			; 0000005aH
  00152	89 45 10	 mov	 DWORD PTR _dr$[ebp], eax

; 62   : 			break;

  00155	eb 64		 jmp	 SHORT $LN7@days
$LN24@days:

; 63   : 		case 5:
; 64   : 			dr = 120 + day;

  00157	8b 45 08	 mov	 eax, DWORD PTR _day$[ebp]
  0015a	83 c0 78	 add	 eax, 120		; 00000078H
  0015d	89 45 10	 mov	 DWORD PTR _dr$[ebp], eax

; 65   : 			break;

  00160	eb 59		 jmp	 SHORT $LN7@days
$LN25@days:

; 66   : 		case 6:
; 67   : 			dr = 151 + day;

  00162	8b 45 08	 mov	 eax, DWORD PTR _day$[ebp]
  00165	05 97 00 00 00	 add	 eax, 151		; 00000097H
  0016a	89 45 10	 mov	 DWORD PTR _dr$[ebp], eax

; 68   : 			break;

  0016d	eb 4c		 jmp	 SHORT $LN7@days
$LN26@days:

; 69   : 		case 7:
; 70   : 			dr = 181 + day;

  0016f	8b 45 08	 mov	 eax, DWORD PTR _day$[ebp]
  00172	05 b5 00 00 00	 add	 eax, 181		; 000000b5H
  00177	89 45 10	 mov	 DWORD PTR _dr$[ebp], eax

; 71   : 			break;

  0017a	eb 3f		 jmp	 SHORT $LN7@days
$LN27@days:

; 72   : 		case 8:
; 73   : 			dr = 212 + day;

  0017c	8b 45 08	 mov	 eax, DWORD PTR _day$[ebp]
  0017f	05 d4 00 00 00	 add	 eax, 212		; 000000d4H
  00184	89 45 10	 mov	 DWORD PTR _dr$[ebp], eax

; 74   : 			break;

  00187	eb 32		 jmp	 SHORT $LN7@days
$LN28@days:

; 75   : 		case 9:
; 76   : 			dr = 243 + day;

  00189	8b 45 08	 mov	 eax, DWORD PTR _day$[ebp]
  0018c	05 f3 00 00 00	 add	 eax, 243		; 000000f3H
  00191	89 45 10	 mov	 DWORD PTR _dr$[ebp], eax

; 77   : 			break;

  00194	eb 25		 jmp	 SHORT $LN7@days
$LN29@days:

; 78   : 		case 10:
; 79   : 			dr = 273 + day;

  00196	8b 45 08	 mov	 eax, DWORD PTR _day$[ebp]
  00199	05 11 01 00 00	 add	 eax, 273		; 00000111H
  0019e	89 45 10	 mov	 DWORD PTR _dr$[ebp], eax

; 80   : 			break;

  001a1	eb 18		 jmp	 SHORT $LN7@days
$LN30@days:

; 81   : 		case 11:
; 82   : 			dr = 304 + day;

  001a3	8b 45 08	 mov	 eax, DWORD PTR _day$[ebp]
  001a6	05 30 01 00 00	 add	 eax, 304		; 00000130H
  001ab	89 45 10	 mov	 DWORD PTR _dr$[ebp], eax

; 83   : 			break;

  001ae	eb 0b		 jmp	 SHORT $LN7@days
$LN31@days:

; 84   : 		case 12:
; 85   : 			dr = 334 + day;

  001b0	8b 45 08	 mov	 eax, DWORD PTR _day$[ebp]
  001b3	05 4e 01 00 00	 add	 eax, 334		; 0000014eH
  001b8	89 45 10	 mov	 DWORD PTR _dr$[ebp], eax
$LN7@days:

; 86   : 			break;
; 87   : 		}
; 88   : 	}
; 89   : 
; 90   : 	return dr;

  001bb	8b 45 10	 mov	 eax, DWORD PTR _dr$[ebp]

; 91   : }

  001be	5f		 pop	 edi
  001bf	5e		 pop	 esi
  001c0	5b		 pop	 ebx
  001c1	81 c4 c4 00 00
	00		 add	 esp, 196		; 000000c4H
  001c7	3b ec		 cmp	 ebp, esp
  001c9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001ce	8b e5		 mov	 esp, ebp
  001d0	5d		 pop	 ebp
  001d1	c3		 ret	 0
  001d2	66 90		 npad	 2
$LN33@days:
  001d4	00 00 00 00	 DD	 $LN8@days
  001d8	00 00 00 00	 DD	 $LN9@days
  001dc	00 00 00 00	 DD	 $LN10@days
  001e0	00 00 00 00	 DD	 $LN11@days
  001e4	00 00 00 00	 DD	 $LN12@days
  001e8	00 00 00 00	 DD	 $LN13@days
  001ec	00 00 00 00	 DD	 $LN14@days
  001f0	00 00 00 00	 DD	 $LN15@days
  001f4	00 00 00 00	 DD	 $LN16@days
  001f8	00 00 00 00	 DD	 $LN17@days
  001fc	00 00 00 00	 DD	 $LN18@days
  00200	00 00 00 00	 DD	 $LN19@days
$LN34@days:
  00204	00 00 00 00	 DD	 $LN20@days
  00208	00 00 00 00	 DD	 $LN21@days
  0020c	00 00 00 00	 DD	 $LN22@days
  00210	00 00 00 00	 DD	 $LN23@days
  00214	00 00 00 00	 DD	 $LN24@days
  00218	00 00 00 00	 DD	 $LN25@days
  0021c	00 00 00 00	 DD	 $LN26@days
  00220	00 00 00 00	 DD	 $LN27@days
  00224	00 00 00 00	 DD	 $LN28@days
  00228	00 00 00 00	 DD	 $LN29@days
  0022c	00 00 00 00	 DD	 $LN30@days
  00230	00 00 00 00	 DD	 $LN31@days
?days@@YAHHHH_N@Z ENDP					; days
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\labs\kpo\1sem\lab1\lab1\lab1\days.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b fd		 mov	 edi, ebp
  0000e	33 c9		 xor	 ecx, ecx
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __AB618FB2_days@cpp
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\labs\kpo\1sem\lab1\lab1\lab1\days.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b fd		 mov	 edi, ebp
  0000e	33 c9		 xor	 ecx, ecx
  00010	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00015	f3 ab		 rep stosd
  00017	b9 00 00 00 00	 mov	 ecx, OFFSET __AB618FB2_days@cpp
  0001c	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi
  00023	5b		 pop	 ebx
  00024	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0002a	3b ec		 cmp	 ebp, esp
  0002c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00031	8b e5		 mov	 esp, ebp
  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
